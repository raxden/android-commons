name: 'Bump module version'
description: "Bump module version"
inputs:
  id:
    description: 'Value used to identify the workflow run'
    required: false
    default: ${{ github.run_number }}
  module:
    description: 'Module name'
    required: true
outputs: { }
runs:
  using: "composite"
  steps:
    - name: Increase patch version
      if: startsWith(github.event.pull_request.title, 'patch')
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :${{ inputs.module }}:increasePatchVersion --info

    - name: Increase minor version
      if: startsWith(github.event.pull_request.title, 'minor')
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :${{ inputs.module }}:increaseMinorVersion --info

    - name: Increase major version
      if: startsWith(github.event.pull_request.title, 'major')
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :${{ inputs.module }}:increaseMajorVersion --info

    - name: Get current version from ${{ inputs.module }}
      id: get-version
      run: |
        VERSION=$(./gradlew -q :${{ inputs.module }}:getVersion | tail -n 1)
        echo "Current version: $VERSION"
        echo "CURRENT_VERSION=$VERSION" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Bump version to ${{ steps.get-version.outputs.CURRENT_VERSION }} from ${{ inputs.module }}
      run: |
        # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
        git --version
        git config user.name \"GitHub Actions Bot\"
        git config user.email "<>"
#        git add .
#        git commit -m "Bump version to ${{ steps.get-version.outputs.CURRENT_VERSION }} [skip ci]"
#        git push --force
        echo "${{ inputs.module }} module has been updated to version ${{ steps.get-version.outputs.CURRENT_VERSION }}" >> $GITHUB_STEP_SUMMARY
      shell: bash
