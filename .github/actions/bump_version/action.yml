name: 'Bump module version'
description: "Bump module version"

inputs:
  id:
    description: 'Value used to identify the workflow run'
    required: false
    default: ${{ github.run_number }}
  module:
    description: 'Module name'
    required: false
    default: "app"
  version:
    description: 'Bump module version'
    required: false
    default: 'patch'
  push:
    description: 'Push changes to git'
    required: false
    default: 'false'
  git-user-name:
    description: 'Github User name'
    required: true
  git-user-email:
    description: 'Github User email'
    required: true
  git-branch:
    description: 'Github Branch'
    required: true
  git-create-tag:
    description: 'Create tag'
    required: false
    default: 'true'

outputs:
  version:
    description: "Module bumped version"
    value: ${{ steps.get-version.outputs.value }}

runs:
  using: "composite"
  steps:
    - name: Increase patch version
      if: inputs.version == 'patch'
      run: |
        ./gradlew :${{ inputs.module }}:increasePatchVersion --no-configuration-cache
      shell: bash

    - name: Increase minor version
      if: inputs.version == 'minor'
      run: |
        ./gradlew :${{ inputs.module }}:increaseMinorVersion --no-configuration-cache
      shell: bash

    - name: Increase major version
      if: inputs.version == 'major'
      run: |
        ./gradlew :${{ inputs.module }}:increaseMajorVersion --no-configuration-cache
      shell: bash

    - name: Get version
      id: get-version
      uses: ./.github/actions/get_version
      with:
          module: ${{ inputs.module }}

    - name: Preparing git credentials
      run: |
        git config user.name "${{ inputs.git-user-name }}"
        git config user.email "${{ inputs.git-user-email }}"
      shell: bash

    - name: Update branch with latest changes
      run: |
        git config pull.rebase true
      shell: bash

    - name: Commit changes
      run: |
        git add .
        git commit -m "Bump :${{ inputs.module }} version to ${{ steps.get-version.outputs.version }} [skip ci]"
      shell: bash

    - name: Create tag
      if: inputs.git-create-tag == 'true'
      run: |
        git tag ${{ steps.get-version.outputs.version }}
      shell: bash

    - name: Push changes
      run: |
        git push origin HEAD:${{ inputs.git-branch }}
        git push --tags
      shell: bash

#    - name: Push changes
#      uses: ad-m/github-push-action@master
#      with:
#        branch: ${{ inputs.git-branch }}
#        ssh: true
#        force: true
#        tags: true

    - name: Module has been updated
      run: |
        echo "${{ inputs.module }} module has been updated to version ${{ steps.get-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
      shell: bash