name: 'Bump module version'
description: "Bump module version"

inputs:
  id:
    description: 'Value used to identify the workflow run'
    required: false
    default: ${{ github.run_number }}
  module:
    description: 'Module name'
    required: true
  github-token:
    description: 'Github token'
    required: true
  force:
    description: 'Force the bump version'
    required: false
    default: "false"

outputs:
  result:
    description: "Module bumped"
    value: ${{ steps.bumped-version.outputs.value }}

runs:
  using: "composite"
  steps:
    - name: Get module path
      id: get-module-path
      run: |
        MODULE=${{ inputs.module }}
        PATH="${MODULE//://}"
        echo "value=$PATH" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Get specific changed files in ${{ inputs.module }}
      id: changed-files-specific
      uses: tj-actions/changed-files@v45
      with:
        files: |
          ${{ steps.get-module-path.outputs.value }}/**/*

    - name: List all changed files
      if: steps.changed-files-specific.outputs.any_changed == 'true' || inputs.force == 'true'
      run: |
        echo "One or more files in the ${{ steps.get-module-path.outputs.path }} folder has changed."
        echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
        echo "${{ steps.get-module-path.outputs.path }} has been detected with changes" >> $GITHUB_STEP_SUMMARY
      shell: bash

    - name: Has module changes
      id: has-module-changes
      run: |
        HAS_CHANGES=${{ steps.changed-files-specific.outputs.any_changed == 'true' || inputs.force == 'true' }}
        echo "value=$HAS_CHANGES" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Get PR info
      id: pull-request
      run: |
        IS_PATCH=${{ startsWith(github.event.pull_request.title, 'patch') || startsWith(github.event.pull_request.title, 'Patch') }}
        echo "is_patch=$IS_PATCH" >> "$GITHUB_OUTPUT"
        IS_MINOR=${{ startsWith(github.event.pull_request.title, 'minor') || startsWith(github.event.pull_request.title, 'Minor') }}
        echo "is_minor=$IS_MINOR" >> "$GITHUB_OUTPUT"
        IS_MAJOR=${{ startsWith(github.event.pull_request.title, 'major') || startsWith(github.event.pull_request.title, 'Major') }}
        echo "is_major=$IS_MAJOR" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Increase patch version
      if: steps.has-module-changes.outputs.value == 'true' && steps.pull-request.outputs.is_patch == 'true'
      run: ./gradlew :${{ inputs.module }}:increasePatchVersion --no-configuration-cache
      shell: bash

    - name: Increase minor version
      if: steps.has-module-changes.outputs.value == 'true' && steps.pull-request.outputs.is_minor == 'true'
      run: ./gradlew :${{ inputs.module }}:increaseMinorVersion --no-configuration-cache
      shell: bash

    - name: Increase major version
      if: steps.has-module-changes.outputs.value == 'true' && steps.pull-request.outputs.is_major == 'true'
      run: ./gradlew :${{ inputs.module }}:increaseMajorVersion --no-configuration-cache
      shell: bash

    - name: Get current version
      if: steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      id: get-version
      run: |
        echo "Get current version from ${{ inputs.module }}"
        VERSION=$(./gradlew -q :${{ inputs.module }}:getVersion | tail -n 1)
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Bump version
      if: steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      id: bumped-version
      env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      run: |
        echo "Bump ${{ inputs.module }} version to ${{ steps.get-version.outputs.value }}"
        git config user.name \"Raxden Robot\"
        git config user.email "raxden.dev@gmail.com"
        git add .
        git commit -m "Bump ${{ inputs.module }} version to ${{ steps.get-version.outputs.value }} [skip ci]"
        git pull
      shell: bash

    - name: Push changes
      if: steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github-token }}
        force: true

    - name: Re-pull on failure
      if: failure() && steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      run: |
        git pull
      shell: bash

    - name: Re-push changes
      if: failure() && steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github-token }}
        force: true

    - name: Module version bumped
      if: steps.has-module-changes.outputs.value == 'true' && ( steps.pull-request.outputs.is_patch == 'true' || steps.pull-request.outputs.is_minor == 'true' || steps.pull-request.outputs.is_major == 'true' )
      run: |
        echo "${{ inputs.module }} module has been updated to version ${{ steps.get-version.outputs.value }}" >> $GITHUB_STEP_SUMMARY
        echo "bumped=true" >> $GITHUB_OUTPUT
      shell: bash