# This is a basic workflow to help you get started with Actions

name: Continuous Delivery

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/cache@v2 # https://github.com/actions/cache/blob/main/examples.md#java---gradle
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Unit tests
        run: ./gradlew testDebugUnitTest jacocoTestReportDebug --stacktrace

      - name: Upload to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v1

  deploy:
    name: Run Deploy Library
    runs-on: ubuntu-latest
    environment: release_environment

    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/cache@v2 # https://github.com/actions/cache/blob/main/examples.md#java---gradle
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy library
        env:
          OSSRH_ID: ${{ secrets.OSSRH_ID }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: bash ./gradlew clean publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseRepository
