# This is a basic workflow to help you get started with Actions

name: Release Candidate Tag

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  info:
    name: Preliminary Information
    runs-on: ubuntu-latest

    steps:
      - name: Basic Information build-${{ github.event.pull_request.number || github.ref }}
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event with ${{ github.event.action }} action."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "  "
          echo "github.ref = ${{ github.ref }}"
          echo "github.sha = ${{ github.sha }}"
          echo "  "

  checkstyle:
    name: Check code (detekt)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code ‚úîÔ∏è
        uses: actions/checkout@v3

      - name: Setup machine ‚úîÔ∏è
        uses: ./.github/actions/common_setup

      - name: Check code via Detekt üìù
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt --stacktrace --scan

  test-modules:
    needs: [ checkstyle ]
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ android, coroutines, pagination-co, pagination-rx, preferences, retrofit-co, threeten ]

    steps:
      - name: Check out code ‚úîÔ∏è
        uses: actions/checkout@v3

      - name: Setup machine ‚úîÔ∏è
        uses: ./.github/actions/common_setup

      - name: Unit tests :${{ matrix.module }} üß™
        uses: gradle/gradle-build-action@v2
        with:
          arguments: :libraries:${{ matrix.module }}:testDebugUnitTest --stacktrace --scan

  publish:
    needs: [ checkstyle, test-modules ]
    name: Publish Library to Sonatype üöÄ
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: release_environment

    steps:
      - name: Check out code ‚úîÔ∏è
        uses: actions/checkout@v3

      - name: Setup machine ‚úîÔ∏è
        uses: ./.github/actions/common_setup

      - name: Publish library üöÄ
        env:
          OSSRH_ID: ${{ secrets.OSSRH_ID }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean publishReleasePublicationToSonatypeRepository closeAndReleaseRepository --no-configuration-cache --info --scan
