# This is a basic workflow to help you get started with Actions

name: Continuous Integration (Bump version)

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      module:
        description: 'Module name'
        required: true
        default: 'all'
      max-parallel:
        description: 'Max threads in parallel'
        required: true
        default: '1'
      version:
        description: 'Bump module version'
        required: true
        default: 'patch'

concurrency:
  group: build-manual-bump-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Increment this to invalidate the cache.
  CACHE_VERSION: 1
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
  # Retention days used for output files
  RETENTION_DAYS: 1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  bump:
    name: Bump module
    runs-on: ubuntu-latest
    strategy:
      max-parallel: ${{ fromJson(github.event.inputs.max-parallel) }}
      matrix:
        module: [
          "libraries:android",
          "libraries:android-binding",
          "libraries:android-compose",
          "libraries:android-test",
          "libraries:core",
          "libraries:coroutines",
          "libraries:coroutines-test",
          "libraries:network",
          "libraries:network-rx",
          "libraries:pagination",
          "libraries:pagination-co",
          "libraries:pagination-rx",
          "libraries:permissions",
          "libraries:preferences",
          "libraries:rx",
          "libraries:rx-test",
          "libraries:threeten",
          "libraries:threeten-test",
        ]

    steps:
      - name: Check out code
        if: github.event.inputs.module == matrix.module || github.event.inputs.module == 'all'
        uses: actions/checkout@v4

      - name: Setup machine
        if: github.event.inputs.module == matrix.module || github.event.inputs.module == 'all'
        uses: ./.github/actions/setup

      - name: Bump module version
        if: github.event.inputs.module == matrix.module || github.event.inputs.module == 'all'
        id: bump-module-version
        uses: ./.github/actions/bump_version
        with:
          push: true
          version: "patch"
          module: ${{ matrix.module }}
#          git-branch: ${{ github.base_ref }}  # master
#          git-create-tag: false
#          git-user-name: ${{ vars.CI_GIT_USER_NAME }}
#          git-user-email: ${{ vars.CI_GIT_USER_EMAIL }}

      - name: Preparing git credentials
        run: |
          git config user.name "${{ vars.CI_GIT_USER_NAME }}"
          git config user.email "${{ vars.CI_GIT_USER_EMAIL }}"
        shell: bash

      - name: Commit changes
        run: |
          git add .
          git commit -m "Bump :${{ matrix.module }} version to ${{ steps.bump-module-version.outputs.version }} [skip ci]"
          git tag ${{ steps.bump-module-version.outputs.version }}
        shell: bash

  push:
    needs: [ bump ]
    if: success()
    name: Push changes
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          # Deploy key: https://github.com/ad-m/github-push-action
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          persist-credentials: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.base_ref }}  # master
          ssh: true
          force: true
          tags: true