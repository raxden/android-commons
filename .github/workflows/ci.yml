# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  # Triggers the workflow on pull request events but only for the master branch
  create:
    branches:
      - 'release/**'
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  info:
    name: Preliminary Information
    runs-on: ubuntu-latest

    steps:
      - name: Information
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "  "
          echo "github.ref = ${{ github.ref }}"
          echo "github.sha = ${{ github.sha }}"
          echo "  "

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [android, coroutines, pagination-co, pagination-rx, preferences, retrofit-co, threeten]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

      - name: Get specific changed files in ${{ matrix.module }}
        id: changed-files-specific_library
        uses: tj-actions/changed-files@v18.7
        with:
          files: |
            libraries/${{ matrix.module }}/**/*

      - name: Preparing variables
        env:
          IS_MASTER_BRANCH: ${{ steps.branch-name.outputs.current_branch == 'master' }}
          IS_RELEASE: ${{ startsWith(steps.branch-name.outputs.current_branch, 'releases/') }}
          HAS_FILES_CHANGED: ${{ steps.changed-files-specific_library.outputs.any_changed }}
        run: |
          echo "isMasterBranch=${IS_MASTER_BRANCH}" >> $GITHUB_ENV
          echo "isRelease=${IS_RELEASE}" >> $GITHUB_ENV
          echo "hasFilesChanged=${HAS_FILES_CHANGED}" >> $GITHUB_ENV

      - name: Detekt :${{ matrix.module }}
        if: env.hasFilesChanged == 'true'
        run: ./gradlew :libraries:${{ matrix.module }}:detekt

      - name: Unit tests :${{ matrix.module }}
        if: env.hasFilesChanged == 'true'
        run: ./gradlew :libraries:${{ matrix.module }}:testDebugUnitTest --stacktrace

      - name: Jacoco Reports :${{ matrix.module }}
        if: env.hasFilesChanged == 'true' && ( env.isMasterBranch == 'true' || env.isRelease == 'true' )
        run: ./gradlew :libraries:${{ matrix.module }}:jacocoTestReportDebug

      - name: Saving Reports :${{ matrix.module }}
        if: env.hasFilesChanged == 'true' && ( env.isMasterBranch == 'true' || env.isRelease == 'true' )
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-reports-${{ matrix.module }}
          path: libraries/${{ matrix.module }}/build/reports/

  upload:
    name: Upload reports
    if: github.event.pull_request.base.ref == 'master' || startsWith(github.ref, 'refs/heads/releases/')
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Loading Reports
        uses: actions/download-artifact@v3

      - name: Uploading reports to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v1

  publish:
    name: Publish Library
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: release_environment

    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Deploy library
        env:
          OSSRH_ID: ${{ secrets.OSSRH_ID }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: bash ./gradlew clean publishReleasePublicationToSonatypeRepository --max-workers 1 closeAndReleaseRepository
