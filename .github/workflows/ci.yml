# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  info:
    name: Workflow Information
    runs-on: ubuntu-latest

    steps:
      - name: Basic Information
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event with ${{ github.event.action }} action."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "  "
          echo "github.ref = ${{ github.ref }}"
          echo "github.sha = ${{ github.sha }}"
          echo "  "

      - name: Pull request information
        if: github.event_name == 'pull_request'
        run: |
          echo "Pull request detected"
          echo "github.event.pull_request.base.ref = ${{ github.event.pull_request.base.ref }}"
          echo "github.event.pull_request.labels = ${{ toJson(github.event.pull_request.labels.*.name) }}"

  checkstyle:
    name: Check code (detekt) ‚úîÔ∏è
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Check code via Detekt
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt --stacktrace --scan

  test:
    needs: [ checkstyle ]
    if: success()
    name: Run Unit Tests üß™
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Unit tests
        uses: ./.github/actions/unit_tests

  reports:
    needs: [ test ]
    if: success()
    name: Generate reports üìù
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Generate jacoco reports and upload to codecov
        uses: ./.github/actions/generate_reports
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  status:
    needs: [ test, reports ]
    if: success() && github.event_name == 'pull_request'
    name: Status
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
