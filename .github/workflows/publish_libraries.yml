# This is a basic workflow to help you get started with Actions

name: Publish libraries

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  pull_request:
    types:
      - closed
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Increment this to invalidate the cache.
  CACHE_VERSION: 1
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  info:
    name: Workflow Information
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_GIT_TOKEN }}

      - name: Basic Information
        uses: ./.github/actions/info

  checkstyle:
    name: Check code (detekt)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_GIT_TOKEN }}

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Check code via Detekt
        uses: ./.github/actions/check_code

  test:
    needs: [ checkstyle ]
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_GIT_TOKEN }}

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Unit tests
        uses: ./.github/actions/unit_tests

  reports:
    needs: [ test ]
    name: Generate reports
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_GIT_TOKEN }}

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Generate jacoco reports and upload to codecov
        uses: ./.github/actions/generate_reports
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: [ checkstyle, test, reports ]
    name: Publish to Sonatype
    runs-on: ubuntu-latest
    environment: release_environment
    strategy:
      matrix:
        module: [
          android,
          android-test,
          core,
          coroutines,
          coroutines-test,
          glide,
          okhttp3,
          pagination,
          pagination-co,
          pagination-rx,
          permissions,
          preferences,
          retrofit,
          retrofit-rx,
          rx,
          rx-test,
          threeten,
          threeten-test
        ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.CI_GIT_TOKEN }}

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Publish module library
        uses: ./.github/actions/publish_module_library
        with:
          module: ${{ matrix.module }}
          sonatype-id: ${{ secrets.OSSRH_ID }}
          sonatype-username: ${{ secrets.OSSRH_USERNAME }}
          sonatype-password: ${{ secrets.OSSRH_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-id: ${{ secrets.SIGNING_KEY_ID }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
